@startuml
!include_many common/init.puml

activate Client

Client -> NoticeSrv ++ : POST /payments
	note left
		!include_many request/pre_close.frag
	end note

loop For each //<payment token>//
	NoticeSrv -> NoticeCache ++ : get(//<payment token>//)
	NoticeCache --> NoticeSrv -- : //<value>//
		note right
			!include_many common/stored_notice_data.frag
		end note
end loop

note over NoticeSrv #Orange
	On any failure, return HTTP 500 (server error) with specific error body. 
end note

!include_many db_interaction/write_trx_with_pre_close.puml

alt //<result>// is ok
	!include_many preset_interaction/trx_with_pre_close.puml

	NoticeSrv --> Client : HTTP 201 (created)
		note right
			!include_many response/pre_close.frag
		end note
else //<result>// is duplicate key
	NoticeSrv --> Client : HTTP 409 (conflict)
else //<result>// is ko
	NoticeSrv --> Client -- : HTTP 500 (server error)
end alt

deactivate Client
@enduml