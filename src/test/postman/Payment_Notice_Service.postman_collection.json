{
	"info": {
		"_postman_id": "3d3485bc-9a0b-4cec-b229-bb560cd9bac3",
		"name": "5. Payment Notice Service",
		"description": "Test di integrazione per il microservizio mil-payment-notice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2465946"
	},
	"item": [
		{
			"name": "1. Validazione dati",
			"item": [
				{
					"name": "0. retrieveAccessToken",
					"item": [
						{
							"name": "getPosAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"        pm.environment.set(\"access_token_pos\", jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_idp_api_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{idp_token_pos_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{idp_token_pos_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{idp_token_pos_client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{MIL_IDP_BASE_URL}}/token",
									"host": [
										"{{MIL_IDP_BASE_URL}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "getNodoAccessToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_nodo\", jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_idp_api_version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{idp_token_nodo_client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{idp_token_nodo_client_secret}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{MIL_IDP_BASE_URL}}/token",
									"host": [
										"{{MIL_IDP_BASE_URL}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "1. verifyByQrCode",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "verifyByQrCode - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByQrCode - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "verifyByQrCode - QR code non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "abcde"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "2. activateByQrCode",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "activateByQrCode - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByQrCode - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":qrCode"
											],
											"variable": [
												{
													"key": "qrCode",
													"value": "{{qr_code}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "activateByQrCode - QR code non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000001\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "abcde"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByQrCode - Request vuota",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800002C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByQrCode - Idempotency Key nulla",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByQrCode - Idempotency Key non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000005\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"abcd\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByQrCode - Amount nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000006\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByQrCode - Amount minore di 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000007\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByQrCode - Amount maggiore di 99999999999",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000008\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": \"100000000000\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "3. verifyByTaxCodeAndNoticeNumber",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "verifyByTaxCodeAndNoticeNumber - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "verifyByTaxCodeAndNoticeNumber - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "verifyByTaxCodeAndNoticeNumber - PA Tax Code non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "abcde"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "verifyByTaxCodeAndNoticeNumber - Notice Number non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "abcde"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "4. activateByTaxCodeAndNoticeNumber",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "activateByTaxCodeAndNoticeNumber - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activateByTaxCodeAndNoticeNumber - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:pa_tax_code/:notice_number",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"paymentNotices",
												":pa_tax_code",
												":notice_number"
											],
											"variable": [
												{
													"key": "pa_tax_code",
													"value": "{{pa_tax_code}}"
												},
												{
													"key": "notice_number",
													"value": "{{notice_number}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - PA Tax Code non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000002\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "abcde"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - Notice Number non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000003\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "abcde"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - Idempotency Key nulla",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000004\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - Idempotency Key non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000005\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"abcd\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - PA Tax Code non valido Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800002C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - Amount nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000006\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - Amount minore di 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000007\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "activateByTaxCodeAndNoticeNumber - Amount maggiore di 99999999999",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000008\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key}}\",\r\n    \"amount\": \"100000000000\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "5. preClose",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "preClose - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "preClose - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "preClose - Request vuota",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800002E\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Outcome nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000009\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Outcome non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"test\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Payment Tokens nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000B\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Payment Tokens con più di 5 elementi",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\",\r\n    \"648fhg36s95jfg7DS\",\r\n    \"648fhg36s95jfg7DS\",\r\n    \"648fhg36s95jfg7DS\",\r\n    \"648fhg36s95jfg7DS\",\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Payment Token non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000D\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"sEoITKKOCAJG9wzOmXrHErjzppiLPTcrbopkgJ3X\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Transaction ID nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000010\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Transaction ID non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000011\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E46-1fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Total Amount nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000012\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Total Amount minore di 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000013\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 0,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Total Amount maggiore di 99999999999",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000014\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 100000000000,\r\n  \"fee\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Fee nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000015\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Fee minore di 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000016\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "preClose - Fee maggiore di 99999999999",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000017\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"PRE_CLOSE\",\r\n  \"paymentTokens\": [\r\n    \"648fhg36s95jfg7DS\"\r\n  ],\r\n  \"transactionId\": \"517a4216840E461fB011036A0fd134E1\",\r\n  \"totalAmount\": 10000,\r\n  \"fee\": 100000000000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "6. close",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "close - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "close - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "517a4216840E461fB011036A0fd134E1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "close - Request vuota",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800002D\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Transaction ID non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000011\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a421684-0E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Outcome nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000009\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Outcome non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"test\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Payment Method nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000E\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Payment Method non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000F\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"test\",\r\n  \"paymentTimestamp\": \"2022-11-12T08:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Payment Timestamp nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000018\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "close - Payment Timestamp non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000019\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"outcome\": \"CLOSE\",\r\n  \"paymentMethod\": \"PAGOBANCOMAT\",\r\n  \"paymentTimestamp\": \"2022-11-1208:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "517a4216840E461fB011036A0fd134E1"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "7. receivePaymentStatus",
					"item": [
						{
							"name": "receivePaymentStatus - Transaction ID non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000011\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a488-02a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Outcome nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000009\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Outcome non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"test\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Payment Date nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800001A\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Payment Date non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800001B\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"test\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Payments nullo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800001C\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Payments con più di 5 elementi",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800001D\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        },\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        },\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        },\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        },\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        },\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Payment Token non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800000D\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"sEoITKKOCAJG9wzOmXrHErjzppiLPTcrbopkgJ3X\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Description non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800001E\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Ab aliquid odio iste quo voluptas voluptatem dignissimos velit. Recusandae facilis qui commodi ea magnam enim nostrum quia quis. Nihil est suscipit assumenda ut voluptatem sed. Esse ab voluptas odit qui molestiae. Rem est nesciunt est quis ipsam expedita consequuntur.\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Creditor Reference ID non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"00800001F\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"sEoITKKOCAJG9wzOmXrHErjzppiLPTcrbopkgJ3X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Fiscal code non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000020\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"test\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Company non valida",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000021\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"Ab aliquid odio iste quo voluptas voluptatem dignissimos velit. Recusandae facilis qui commodi ea magnam enim nostrum quia quis. Nihil est suscipit assumenda ut voluptatem sed. Esse ab voluptas odit qui molestiae. Rem est nesciunt est quis ipsam expedita consequuntur.\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Office non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000022\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ab aliquid odio iste quo voluptas voluptatem dignissimos velit. Recusandae facilis qui commodi ea magnam enim nostrum quia quis. Nihil est suscipit assumenda ut voluptatem sed. Esse ab voluptas odit qui molestiae. Rem est nesciunt est quis ipsam expedita consequuntur.\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "receivePaymentStatus - Debtor non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000023\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"2022-11-12T08:53:55\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"648fhg36s95jfg7DS\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"15376371009\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Temporibus vitae nisi quo consequatur autem molestias blanditiis. Consequatur quibusdam ut voluptas eos quaerat qui omnis. Excepturi beatae nihil eos pariatur qui. Aut recusandae voluptas labore veritatis sed ducimus voluptatem ratione. Qui numquam quidem quia voluptatem fugiat sint ab voluptas et. Esse velit aperiam vel. Similique asperiores sit ex iusto omnis reprehenderit et ullam. Delectus sed eum debitis. Sit est eum et delectus saepe. Sint atque voluptas ducimus. Est voluptates in saepe aut temporibus sit cumque quis. Non atque placeat asperiores rerum non. Pariatur nobis accusamus tenetur animi. Totam consequuntur iste odit nesciunt et. Sit veniam nihil eos aut aut est. Unde sit necessitatibus eos ut omnis odio. Voluptatem necessitatibus iusto assumenda quaerat sed tempora. Nam dolorem alias explicabo hic sit est asperiores eos dolores. Et minima harum enim tempore adipisci laborum quia. Aliquam et harum nesciunt quod velit. Nam ad adipisci reprehenderit aperiam voluptatem illo consequatur. Et illo quo necessitatibus quam architecto adipisci voluptas. Culpa magni autem officia aut. Reprehenderit quo inventore. Non alias repellendus et. Vel quisquam quis et maiores ea hic esse. Officia et et voluptates nihil voluptates et iste similique. Delectus iusto qui placeat enim rerum.\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{access_token_nodo}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "8. getPaymentStatus",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "getPaymentStatus - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getPaymentStatus - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments",
												":transactionId"
											],
											"variable": [
												{
													"key": "transactionId",
													"value": "{{transaction_id_validation}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getPaymentStatus - Transaction ID non valido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000011\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "27de01c5c4b24a48-802a59696c2bef20"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "9. getPayments",
					"item": [
						{
							"name": "Validazione header",
							"item": [
								{
									"name": "getPayments - RequestId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000001\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - RequestId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000002\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "131///00=",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - Version non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000004\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "pppL",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - Version size non valida",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000003\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay78237829748274",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - AcquirerId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000005\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - AcquirerId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000006\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "ssk23",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - Channel nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000007\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - Channel non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000008\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "AATTMM",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - MerchantId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000B\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - MerchantId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000C\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "23-32-42-r",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "{{terminal_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - TerminalId nullo",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"000000009\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "getPayments - TerminalId non valido",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"errors containes value\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors).to.contain(\"00000000A\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "RequestId",
												"value": "{{$guid}}",
												"type": "text"
											},
											{
												"key": "Version",
												"value": "{{mil_payment_notice_api_version}}",
												"type": "text"
											},
											{
												"key": "AcquirerId",
												"value": "{{acquirer_id}}",
												"type": "text"
											},
											{
												"key": "Channel",
												"value": "{{channel}}",
												"type": "text"
											},
											{
												"key": "TerminalId",
												"value": "13---..99",
												"type": "text"
											},
											{
												"key": "MerchantId",
												"value": "{{merchant_id}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
											"host": [
												"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
											],
											"path": [
												"payments"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"  \"properties\": {",
									"    \"errors\": {",
									"      \"type\": \"array\"",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test(\"errors containes only one element\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors).to.have.length(1);",
									"});"
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token_pos}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "2. Pagamento Spontaneo ATM",
			"item": []
		},
		{
			"name": "3. Pagamento Spontaneo POS",
			"item": [
				{
					"name": "1. Scan QR code",
					"item": [
						{
							"name": "0a. Recupero token POS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        console.log(\"JKW \" + jsonData);\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_pos\", jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_idp_api_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{idp_token_pos_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{idp_token_pos_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{idp_token_pos_client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{MIL_IDP_BASE_URL}}/token",
									"host": [
										"{{MIL_IDP_BASE_URL}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "0b. Recupero token nodo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_nodo\", jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_idp_api_version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{idp_token_nodo_client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{idp_token_nodo_client_secret}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{MIL_IDP_BASE_URL}}/token",
									"host": [
										"{{MIL_IDP_BASE_URL}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "1. Verifica Avviso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"amount is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.amount).to.be.not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"paTaxCode is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.paTaxCode).to.be.not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"noticeNumber matches\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.noticeNumber).to.eql(pm.collectionVariables.get(\"notice_number_pay\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"\r",
											"function base64url(input) {\r",
											"    var base64String = btoa(input);\r",
											"    return urlConvertBase64(base64String);\r",
											"}\r",
											"\r",
											"function urlConvertBase64(input) {\r",
											"    var output = input.replace(/=+$/, '');\r",
											"    output = output.replace(/\\+/g, '-');\r",
											"    output = output.replace(/\\//g, '_');\r",
											"    return output;\r",
											"}\r",
											"\r",
											"var noticeNumber = \"30205\" + randInt(1000000000000, 9999999999999);\r",
											"pm.collectionVariables.set(\"notice_number_pay\", noticeNumber);\r",
											"console.log(\"noticeNumber -> \" + noticeNumber);\r",
											"\r",
											"var paTaxCode = pm.environment.get(\"pa_tax_code\");\r",
											"\r",
											"var qrCode = \"PAGOPA|002|\" + noticeNumber + \"|\" + paTaxCode + \"|\" + 10000;\r",
											"console.log(\"qrCode -> \" + qrCode);\r",
											"\r",
											"pm.collectionVariables.set(\"qr_code_pay\", base64url(qrCode));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code_pay}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Attivazione Avviso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"amount is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.amount).to.be.not.null;\r",
											"    console.log(\"totalAmount -> \" + jsonData.amount);\r",
											"    if (jsonData.amount) {\r",
											"        pm.collectionVariables.set(\"totalAmountPay\", jsonData.amount);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"paTaxCode is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.paTaxCode).to.be.not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"paymentToken is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.paymentToken).to.be.not.null;\r",
											"    console.log(\"paymentToken -> \" + jsonData.paymentToken);\r",
											"    if (jsonData.paymentToken) {\r",
											"        pm.collectionVariables.set(\"paymentToken\", jsonData.paymentToken);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"transfers is present\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.transfers).to.have;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var uuid = require('uuid')\r",
											"\r",
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"var transactionId = uuid.v4().replace(/-/g, '');\r",
											"console.log(\"transactionId ->\" + transactionId);\r",
											"pm.collectionVariables.set(\"transactionId\", transactionId);\r",
											"\r",
											"var paTaxCode = pm.environment.get(\"pa_tax_code\");\r",
											"console.log(\"paTaxCode -> \" + paTaxCode);\r",
											"var idempotencyKey = paTaxCode + \"_\" + randomString(10);\r",
											"console.log(\"idempotencyKey ->\" + idempotencyKey);\r",
											"pm.collectionVariables.set(\"idempotency_key_pay\", idempotencyKey);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"{{idempotency_key_pay}}\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:qrCode",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":qrCode"
									],
									"variable": [
										{
											"key": "qrCode",
											"value": "{{qr_code_pay}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Pre Close (OK)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Location header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Location\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"PRE_CLOSE\",\r\n    \"paymentTokens\": [\r\n        \"{{paymentToken}}\"\r\n    ],\r\n    \"totalAmount\": {{totalAmountPay}},\r\n    \"transactionId\": \"{{transactionId}}\",\r\n    \"fee\": {{fee}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "3a. Pre Close (Trasanction Id duplicato)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});\r",
											"\r",
											"pm.test(\"Check  response body is empty\", function() {\r",
											"    var responseLenght = pm.response.body;\r",
											"    pm.expect(responseLenght).to.eql(undefined)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"PRE_CLOSE\",\r\n    \"paymentTokens\": [\r\n        \"{{paymentToken}}\"\r\n    ],\r\n    \"totalAmount\": {{totalAmountPay}},\r\n    \"transactionId\": \"{{transactionId}}\",\r\n    \"fee\": {{fee}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "3b. Pre Close (Payment Token sconosciuto)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"  \"properties\": {\r",
											"    \"errors\": {\r",
											"      \"type\": \"array\"\r",
											"    }\r",
											"  }\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											"  pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes only one element\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.have.length(1);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000032\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"PRE_CLOSE\",\r\n    \"paymentTokens\": [\r\n        \"00000000000000000000000000000000\"\r\n    ],\r\n    \"totalAmount\": {{totalAmountPay}},\r\n    \"transactionId\": \"{{transactionId}}\",\r\n    \"fee\": {{fee}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "3c. Pre Close (Amount errato)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"  \"properties\": {\r",
											"    \"errors\": {\r",
											"      \"type\": \"array\"\r",
											"    }\r",
											"  }\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											"  pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes only one element\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.have.length(1);\r",
											"});\r",
											"\r",
											"pm.test(\"errors containes value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.errors).to.contain(\"008000033\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"PRE_CLOSE\",\r\n    \"paymentTokens\": [\r\n        \"{{paymentToken}}\"\r\n    ],\r\n    \"totalAmount\": 9,\r\n    \"transactionId\": \"{{transactionId}}\",\r\n    \"fee\": {{fee}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Recupera stato pagamento (PreClose)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"transactionId matches value\", function () {\r",
											"    pm.expect(pm.response.json().transactionId).to.eq(pm.collectionVariables.get(\"transactionId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acquirerId matches value\", function () {\r",
											"    pm.expect(pm.response.json().acquirerId).to.eq(pm.environment.get(\"acquirer_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"channel matches value\", function () {\r",
											"    pm.expect(pm.response.json().channel).to.eq(pm.collectionVariables.get(\"channel\"));\r",
											"});\r",
											"\r",
											"pm.test(\"merchantId matches value\", function () {\r",
											"    pm.expect(pm.response.json().merchantId).to.eq(pm.environment.get(\"merchant_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"terminalId matches value\", function () {\r",
											"    pm.expect(pm.response.json().terminalId).to.eq(pm.collectionVariables.get(\"terminal_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"insertTimestamp is not null\", function () {\r",
											"    pm.expect(pm.response.json().insertTimestamp).to.be.not.null;\r",
											"});\r",
											"\r",
											"// TODO insert validation of notices\r",
											"\r",
											"pm.test(\"totalAmount matches value\", function () {\r",
											"    pm.expect(pm.response.json().totalAmount).to.eq(parseInt(pm.collectionVariables.get(\"totalAmountPay\")));\r",
											"});\r",
											"\r",
											"pm.test(\"fee matches value\", function () {\r",
											"    pm.expect(pm.response.json().fee).to.eq(parseInt(pm.collectionVariables.get(\"fee\")));\r",
											"});\r",
											"\r",
											"pm.test(\"status matches PENDING\", function () {\r",
											"    pm.expect(pm.response.json().status).to.eq(\"PRE_CLOSE\");\r",
											"});\r",
											"\r",
											"pm.test(\"paymentMethod is null\", function () {\r",
											"    pm.expect(pm.response.json().paymentMethod).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"paymentTimestamp is null\", function () {\r",
											"    pm.expect(pm.response.json().paymentTimestamp).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"closeTimestamp is null\", function () {\r",
											"    pm.expect(pm.response.json().closeTimestamp).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"paymentDate is null\", function () {\r",
											"    pm.expect(pm.response.json().paymentDate).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"callbackTimestamp is null\", function () {\r",
											"    pm.expect(pm.response.json().callbackTimestamp).to.be.null;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Conferma pagamento (OK)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"\r",
											"var paymentTimestamp = moment().utc().format('YYYY-MM-DDTHH:mm:ss');\r",
											"console.log(\"paymentTimestamp -> \" + paymentTimestamp);\r",
											"pm.collectionVariables.set(\"paymentTimestamp\", paymentTimestamp);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Max-Retries header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Max-Retries\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Retry-After header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Retry-After\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Location header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Location\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"CLOSE\",\r\n    \"paymentMethod\": \"{{paymentMethod}}\",\r\n    \"paymentTimestamp\": \"{{paymentTimestamp}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "6a. Recupera stato pagamento",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"transactionId matches value\", function () {\r",
											"    pm.expect(pm.response.json().transactionId).to.eq(pm.collectionVariables.get(\"transactionId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acquirerId matches value\", function () {\r",
											"    pm.expect(pm.response.json().acquirerId).to.eq(pm.environment.get(\"acquirer_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"channel matches value\", function () {\r",
											"    pm.expect(pm.response.json().channel).to.eq(pm.collectionVariables.get(\"channel\"));\r",
											"});\r",
											"\r",
											"pm.test(\"merchantId matches value\", function () {\r",
											"    pm.expect(pm.response.json().merchantId).to.eq(pm.environment.get(\"merchant_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"terminalId matches value\", function () {\r",
											"    pm.expect(pm.response.json().terminalId).to.eq(pm.collectionVariables.get(\"terminal_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"insertTimestamp is not null\", function () {\r",
											"    pm.expect(pm.response.json().insertTimestamp).to.be.not.null;\r",
											"});\r",
											"\r",
											"// TODO insert validation of notices\r",
											"\r",
											"pm.test(\"totalAmount matches value\", function () {\r",
											"    pm.expect(pm.response.json().totalAmount).to.eq(parseInt(pm.collectionVariables.get(\"totalAmountPay\")));\r",
											"});\r",
											"\r",
											"pm.test(\"fee matches value\", function () {\r",
											"    pm.expect(pm.response.json().fee).to.eq(parseInt(pm.collectionVariables.get(\"fee\")));\r",
											"});\r",
											"\r",
											"var mockEnabled = pm.environment.get(\"apim_mock_enabled\");\r",
											"if (mockEnabled == \"true\") {\r",
											"    console.log(\"API management mock is enabled, skipping checks\");\r",
											"}\r",
											"else {\r",
											"    console.log(\"API management mock is not enabled\");\r",
											"    pm.test(\"status matches PENDING\", function () {\r",
											"        pm.expect(pm.response.json().status).to.eq(\"PENDING\");\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentMethod matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentMethod).to.eq(pm.collectionVariables.get(\"paymentMethod\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentTimestamp matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentTimestamp).to.eq(pm.collectionVariables.get(\"paymentTimestamp\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"closeTimestamp is not null\", function () {\r",
											"        pm.expect(pm.response.json().closeTimestamp).to.be.not.null;\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentDate is null\", function () {\r",
											"        pm.expect(pm.response.json().paymentDate).to.be.null;\r",
											"    });\r",
											"\r",
											"    pm.test(\"callbackTimestamp is null\", function () {\r",
											"        pm.expect(pm.response.json().callbackTimestamp).to.be.null;\r",
											"    });\r",
											"}\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "6b. Recupera stato pagamento (Transaction Id non presente)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "bcb0e6ab48aa426c8e92625424a1321d"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Aggiorna stato pagamento",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"\r",
											"var paymentDate = moment().utc().format('YYYY-MM-DDTHH:mm:ss');\r",
											"console.log(\"paymentDate -> \" + paymentDate);\r",
											"pm.collectionVariables.set(\"paymentDate\", paymentDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token_nodo}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"{{paymentDate}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"{{paymentToken}}\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"{{pa_tax_code}}\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Recupera stato pagamento (Closed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"transactionId matches value\", function () {\r",
											"    pm.expect(pm.response.json().transactionId).to.eq(pm.collectionVariables.get(\"transactionId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acquirerId matches value\", function () {\r",
											"    pm.expect(pm.response.json().acquirerId).to.eq(pm.environment.get(\"acquirer_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"channel matches value\", function () {\r",
											"    pm.expect(pm.response.json().channel).to.eq(pm.collectionVariables.get(\"channel\"));\r",
											"});\r",
											"\r",
											"pm.test(\"merchantId matches value\", function () {\r",
											"    pm.expect(pm.response.json().merchantId).to.eq(pm.environment.get(\"merchant_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"terminalId matches value\", function () {\r",
											"    pm.expect(pm.response.json().terminalId).to.eq(pm.collectionVariables.get(\"terminal_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"insertTimestamp is not null\", function () {\r",
											"    pm.expect(pm.response.json().insertTimestamp).to.be.not.null;\r",
											"});\r",
											"\r",
											"// TODO insert validation of notices\r",
											"\r",
											"pm.test(\"totalAmount matches value\", function () {\r",
											"    pm.expect(pm.response.json().totalAmount).to.eq(parseInt(pm.collectionVariables.get(\"totalAmountPay\")));\r",
											"});\r",
											"\r",
											"pm.test(\"fee matches value\", function () {\r",
											"    pm.expect(pm.response.json().fee).to.eq(parseInt(pm.collectionVariables.get(\"fee\")));\r",
											"});\r",
											"\r",
											"var mockEnabled = pm.environment.get(\"apim_mock_enabled\");\r",
											"if (mockEnabled == \"true\") {\r",
											"    console.log(\"API management mock is enabled, skipping checks\");\r",
											"}\r",
											"else {\r",
											"    console.log(\"API management mock is not enabled\");\r",
											"    pm.test(\"status matches CLOSED\", function () {\r",
											"        pm.expect(pm.response.json().status).to.eq(\"CLOSED\");\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentMethod matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentMethod).to.eq(pm.collectionVariables.get(\"paymentMethod\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentTimestamp matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentTimestamp).to.eq(pm.collectionVariables.get(\"paymentTimestamp\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentDate matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentDate).to.eq(pm.collectionVariables.get(\"paymentDate\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"callbackTimestamp is not null\", function () {\r",
											"        pm.expect(pm.response.json().callbackTimestamp).to.be.not.null;\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "9. Recupera lista pagamenti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2. Inserimento dati manuale",
					"item": [
						{
							"name": "0a. Recupero token POS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"refresh_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        console.log(\"JKW \" + jsonData);\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_pos\", jsonData.access_token);\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_idp_api_version}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "{{idp_token_pos_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{idp_token_pos_password}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline_access",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{idp_token_pos_client_id}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{MIL_IDP_BASE_URL}}/token",
									"host": [
										"{{MIL_IDP_BASE_URL}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "0b. Recupero token nodo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
											"    pm.expect(pm.response.text()).to.include(\"token_type\");\r",
											"    pm.expect(pm.response.text()).to.include(\"expires_in\");\r",
											"\r",
											"    pm.test(\"Token type\", function () {\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.token_type).to.eql(\"Bearer\");\r",
											"         pm.environment.set(\"access_token_nodo\", jsonData.access_token);\r",
											"\r",
											"    });\r",
											"\r",
											"   \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_idp_api_version}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{idp_token_nodo_client_id}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{idp_token_nodo_client_secret}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{MIL_IDP_BASE_URL}}/token",
									"host": [
										"{{MIL_IDP_BASE_URL}}"
									],
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "1. Verifica Avviso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"amount is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.amount).to.be.not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"paTaxCode is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.paTaxCode).to.be.not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"noticeNumber matches\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.noticeNumber).to.eql(pm.collectionVariables.get(\"notice_number_pay\"));\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"\r",
											"var noticeNumber = \"30205\" + randInt(1000000000000, 9999999999999);\r",
											"pm.collectionVariables.set(\"notice_number_pay\", noticeNumber);\r",
											"console.log(\"noticeNumber -> \" + noticeNumber);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number_pay}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Attivazione Avviso",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"amount is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.amount).to.be.not.null;\r",
											"    console.log(\"totalAmount -> \" + jsonData.amount);\r",
											"    if (jsonData.amount) {\r",
											"        pm.collectionVariables.set(\"totalAmountPay\", jsonData.amount);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"paTaxCode is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.paTaxCode).to.be.not.null;\r",
											"});\r",
											"\r",
											"pm.test(\"paymentToken is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.paymentToken).to.be.not.null;\r",
											"    console.log(\"paymentToken -> \" + jsonData.paymentToken);\r",
											"    if (jsonData.paymentToken) {\r",
											"        pm.collectionVariables.set(\"paymentToken\", jsonData.paymentToken);\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"transfers is present\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.transfers).to.have;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"var uuid = require('uuid')\r",
											"\r",
											"var transactionId = uuid.v4().replace(/-/g, '');\r",
											"console.log(\"transactionId ->\" + transactionId);\r",
											"pm.collectionVariables.set(\"transactionId\", transactionId);\r",
											"\r",
											"var timestampOp = moment().utc().format('YYYY-MM-DDTHH:mm:ss');\r",
											"console.log(\"timestampOp ->\" + timestampOp);\r",
											"pm.collectionVariables.set(\"timestampOp\", timestampOp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"idempotencyKey\": \"77777777777_abcDEF1238\",\r\n    \"amount\": 10000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/paymentNotices/:paTaxCode/:noticeNumber",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"paymentNotices",
										":paTaxCode",
										":noticeNumber"
									],
									"variable": [
										{
											"key": "paTaxCode",
											"value": "{{pa_tax_code}}"
										},
										{
											"key": "noticeNumber",
											"value": "{{notice_number_pay}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Pre Close (OK)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Location header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Location\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"PRE_CLOSE\",\r\n    \"paymentTokens\": [\r\n        \"{{paymentToken}}\"\r\n    ],\r\n    \"totalAmount\": {{totalAmountPay}},\r\n    \"transactionId\": \"{{transactionId}}\",\r\n    \"fee\": {{fee}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Conferma pagamento (OK)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"\r",
											"var paymentTimestamp = moment().utc().format('YYYY-MM-DDTHH:mm:ss');\r",
											"console.log(\"paymentTimestamp -> \" + paymentTimestamp);\r",
											"pm.collectionVariables.set(\"paymentTimestamp\", paymentTimestamp);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Outcome is OK\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.outcome).to.eql(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Max-Retries header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Max-Retries\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Retry-After header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Retry-After\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Location header is present\", function () {\r",
											"    pm.expect(pm.response.to.have.header(\"Location\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"CLOSE\",\r\n    \"paymentMethod\": \"{{paymentMethod}}\",\r\n    \"paymentTimestamp\": \"{{paymentTimestamp}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Recupera stato pagamento",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"transactionId matches value\", function () {\r",
											"    pm.expect(pm.response.json().transactionId).to.eq(pm.collectionVariables.get(\"transactionId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acquirerId matches value\", function () {\r",
											"    pm.expect(pm.response.json().acquirerId).to.eq(pm.environment.get(\"acquirer_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"channel matches value\", function () {\r",
											"    pm.expect(pm.response.json().channel).to.eq(pm.collectionVariables.get(\"channel\"));\r",
											"});\r",
											"\r",
											"pm.test(\"merchantId matches value\", function () {\r",
											"    pm.expect(pm.response.json().merchantId).to.eq(pm.environment.get(\"merchant_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"terminalId matches value\", function () {\r",
											"    pm.expect(pm.response.json().terminalId).to.eq(pm.collectionVariables.get(\"terminal_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"insertTimestamp is not null\", function () {\r",
											"    pm.expect(pm.response.json().insertTimestamp).to.be.not.null;\r",
											"});\r",
											"\r",
											"// TODO insert validation of notices\r",
											"\r",
											"pm.test(\"totalAmount matches value\", function () {\r",
											"    pm.expect(pm.response.json().totalAmount).to.eq(parseInt(pm.collectionVariables.get(\"totalAmountPay\")));\r",
											"});\r",
											"\r",
											"pm.test(\"fee matches value\", function () {\r",
											"    pm.expect(pm.response.json().fee).to.eq(parseInt(pm.collectionVariables.get(\"fee\")));\r",
											"});\r",
											"\r",
											"var mockEnabled = pm.environment.get(\"apim_mock_enabled\");\r",
											"if (mockEnabled == \"true\") {\r",
											"    console.log(\"API management mock is enabled, skipping checks\");\r",
											"}\r",
											"else {\r",
											"    console.log(\"API managament mock is not enabled\");\r",
											"    pm.test(\"status matches PENDING\", function () {\r",
											"        pm.expect(pm.response.json().status).to.eq(\"PENDING\");\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentMethod matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentMethod).to.eq(pm.collectionVariables.get(\"paymentMethod\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentTimestamp matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentTimestamp).to.eq(pm.collectionVariables.get(\"paymentTimestamp\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"closeTimestamp is not null\", function () {\r",
											"        pm.expect(pm.response.json().closeTimestamp).to.be.not.null;\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentDate is null\", function () {\r",
											"        pm.expect(pm.response.json().paymentDate).to.be.null;\r",
											"    });\r",
											"\r",
											"    pm.test(\"callbackTimestamp is null\", function () {\r",
											"        pm.expect(pm.response.json().callbackTimestamp).to.be.null;\r",
											"    });\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Aggiorna stato pagamento",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment')\r",
											"\r",
											"var paymentDate = moment().utc().format('YYYY-MM-DDTHH:mm:ss');\r",
											"console.log(\"paymentDate -> \" + paymentDate);\r",
											"pm.collectionVariables.set(\"paymentDate\", paymentDate);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token_nodo}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"outcome\": \"OK\",\r\n    \"paymentDate\": \"{{paymentDate}}\",\r\n    \"payments\": [\r\n        {\r\n            \"paymentToken\": \"{{paymentToken}}\",\r\n            \"description\": \"Health ticket for chest x-ray\",\r\n            \"creditorReferenceId\": \"4839d50603fssfW5X\",\r\n            \"fiscalCode\": \"{{pa_tax_code}}\",\r\n            \"company\": \"ASL Roma\",\r\n            \"office\": \"Ufficio di Roma\",\r\n            \"debtor\": \"Mario Rossi\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Recupera stato pagamento (Closed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"transactionId matches value\", function () {\r",
											"    pm.expect(pm.response.json().transactionId).to.eq(pm.collectionVariables.get(\"transactionId\"));\r",
											"});\r",
											"\r",
											"pm.test(\"acquirerId matches value\", function () {\r",
											"    pm.expect(pm.response.json().acquirerId).to.eq(pm.environment.get(\"acquirer_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"channel matches value\", function () {\r",
											"    pm.expect(pm.response.json().channel).to.eq(pm.collectionVariables.get(\"channel\"));\r",
											"});\r",
											"\r",
											"pm.test(\"merchantId matches value\", function () {\r",
											"    pm.expect(pm.response.json().merchantId).to.eq(pm.environment.get(\"merchant_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"terminalId matches value\", function () {\r",
											"    pm.expect(pm.response.json().terminalId).to.eq(pm.collectionVariables.get(\"terminal_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"insertTimestamp is not null\", function () {\r",
											"    pm.expect(pm.response.json().insertTimestamp).to.be.not.null;\r",
											"});\r",
											"\r",
											"// TODO insert validation of notices\r",
											"\r",
											"pm.test(\"totalAmount matches value\", function () {\r",
											"    pm.expect(pm.response.json().totalAmount).to.eq(parseInt(pm.collectionVariables.get(\"totalAmountPay\")));\r",
											"});\r",
											"\r",
											"pm.test(\"fee matches value\", function () {\r",
											"    pm.expect(pm.response.json().fee).to.eq(parseInt(pm.collectionVariables.get(\"fee\")));\r",
											"});\r",
											"\r",
											"var mockEnabled = pm.environment.get(\"apim_mock_enabled\");\r",
											"if (mockEnabled == \"true\") {\r",
											"    console.log(\"API management mock is enabled, skipping checks\");\r",
											"}\r",
											"else {\r",
											"    console.log(\"API management mock is not enabled\");\r",
											"    pm.test(\"status matches CLOSED\", function () {\r",
											"        pm.expect(pm.response.json().status).to.eq(\"CLOSED\");\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentMethod matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentMethod).to.eq(pm.collectionVariables.get(\"paymentMethod\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentTimestamp matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentTimestamp).to.eq(pm.collectionVariables.get(\"paymentTimestamp\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"paymentDate matches value\", function () {\r",
											"        pm.expect(pm.response.json().paymentDate).to.eq(pm.collectionVariables.get(\"paymentDate\"));\r",
											"    });\r",
											"\r",
											"    pm.test(\"callbackTimestamp is not null\", function () {\r",
											"        pm.expect(pm.response.json().callbackTimestamp).to.be.not.null;\r",
											"    });\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments/:transactionId",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "{{transactionId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Recupera lista pagamenti",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "RequestId",
										"value": "{{$guid}}",
										"type": "text"
									},
									{
										"key": "Version",
										"value": "{{mil_payment_notice_api_version}}",
										"type": "text"
									},
									{
										"key": "AcquirerId",
										"value": "{{acquirer_id}}",
										"type": "text"
									},
									{
										"key": "Channel",
										"value": "{{channel}}",
										"type": "text"
									},
									{
										"key": "TerminalId",
										"value": "{{terminal_id}}",
										"type": "text"
									},
									{
										"key": "MerchantId",
										"value": "{{merchant_id}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{MIL_PAYMENT_NOTICE_BASE_URL}}/payments",
									"host": [
										"{{MIL_PAYMENT_NOTICE_BASE_URL}}"
									],
									"path": [
										"payments"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{access_token_pos}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{APIM_SUBSCRIPTION_KEY}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Ocp-Apim-Subscription-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "mil_payment_notice_api_version",
			"value": "1.0.0",
			"type": "string"
		},
		{
			"key": "mil_idp_api_version",
			"value": "1.0.0",
			"type": "string"
		},
		{
			"key": "channel",
			"value": "POS",
			"type": "string"
		},
		{
			"key": "notice_number",
			"value": "302051234567890124",
			"type": "string"
		},
		{
			"key": "terminal_id",
			"value": "Test001",
			"type": "string"
		},
		{
			"key": "qr_code",
			"value": "UEFHT1BBfDAwMnwzMDIwNTEyMzQ1Njc4OTAxMjV8Nzc3Nzc3Nzc3Nzd8MTAwMDA",
			"type": "string"
		},
		{
			"key": "idempotency_key",
			"value": "77777777777_abcDEF1238",
			"type": "string"
		},
		{
			"key": "transaction_id_validation",
			"value": "ff814b6b976d4ae9810ceb73a39392de",
			"type": "string"
		},
		{
			"key": "transactionId",
			"value": ""
		},
		{
			"key": "timestampOp",
			"value": ""
		},
		{
			"key": "paymentToken",
			"value": ""
		},
		{
			"key": "totalAmount",
			"value": ""
		},
		{
			"key": "fee",
			"value": "100",
			"type": "string"
		},
		{
			"key": "paymentMethod",
			"value": "PAYMENT_CARD",
			"type": "string"
		},
		{
			"key": "paymentTimestamp",
			"value": ""
		},
		{
			"key": "paymentDate",
			"value": ""
		},
		{
			"key": "notice_number_pay",
			"value": ""
		},
		{
			"key": "qr_code_pay",
			"value": ""
		},
		{
			"key": "idempotency_key_pay",
			"value": ""
		},
		{
			"key": "totalAmountPay",
			"value": ""
		}
	]
}